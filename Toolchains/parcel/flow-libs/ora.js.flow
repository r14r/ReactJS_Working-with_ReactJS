// @flow

declare module 'ora' {
  declare type OraOpts =
    | string
    | {
    color?: string,
    enabled?: boolean,
    indent?: number,
    interval?: number,
    stream?: stream$Writable,
    text?: string,
    ...
  };

  declare export class Ora {
    get indent(): number;
    set indent(number): void;
    get spinner(): ?Spinner;
    set spinner(Spinner): void;
    get text(): string;
    set text(string): void;
    get isSpinning(): boolean;

    frame(): string;
    clear(): this;
    render(): this;
    start(text?: string): this;
    stop(): this;
    succeed(text?: string): this;
    fail(text?: string): this;
    warn(text?: string): this;
    info(text?: string): this;
    stopAndPersist(?{ text?: string, ... }): this;
  }

  declare interface Spinner {
    frames: Array<string>;
    interval?: number;
  }
  declare export default (opts?: OraOpts) => Ora;
  declare export var promise: (action: Promise<mixed>, opts?: OraOpts) => Ora;
}
