// @flow

// Derived from the ink source available at:
// https://github.com/vadimdemedes/ink
// Which is licensed MIT

declare module 'ink' {
  declare export interface StdoutLike {
    columns: number;
    write(chunk: string | Buffer | Uint8Array): mixed;
  }

  declare type RenderOptions =
    | StdoutLike
    | {|
        stdout?: StdoutLike
      |};

  declare type ColorProps = {|
    bold?: boolean,
    children: React$Node,
    dim?: boolean,
    gray?: boolean,
    green?: boolean,
    keyword?: string,
    cyan?: boolean,
    magenta?: boolean,
    reset?: boolean,
    yellow?: boolean,
    blue?: boolean,
    blackBright?: boolean,
    redBright?: boolean,
    greenBright?: boolean,
    yellowBright?: boolean,
    blueBright?: boolean,
    magentaBright?: boolean,
    cyanBright?: boolean,
    whiteBright?: boolean,
  |};
  declare export var Color: React$ComponentType<ColorProps>;
  // https://github.com/vadimdemedes/ink#static
  declare export var Static: React$ComponentType<{ children: React$Node, ... }>;

  declare type TextProps = {|
    children: React$Node
  |};
  declare export var Text: React$ComponentType<TextProps>;

  declare type BoxProps = {|
    children: React$Node
  |};
  declare export var Box: React$ComponentType<BoxProps>;

  declare export type RerenderFunc = (node: React$Node) => void;

  declare export function render(
    node: React$Node,
    options?: RenderOptions
  ): {|
    rerender: RerenderFunc,
    unmount: () => void,
    waitUntilExit: Promise<void>
  |};
}
